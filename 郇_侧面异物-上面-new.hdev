<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="24.11.1.0">
<procedure name="main">
<interface/>
<body>
<l>Defect (Image, IsOK)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="Defect">
<interface>
<oo>
<par name="Image" base_type="iconic" dimension="0"/>
</oo>
<oc>
<par name="IsOK" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* 设置文件夹路径</c>
<l>FolderPath := 'H:/NR数据集/采图（cdd1-cdd6）已筛选/cdd1筛选/合格品' </l>
<c></c>
<c>* 获取文件夹中的所有图像文件</c>
<l>list_files(FolderPath, ['files'], Files)</l>
<l>tuple_length(Files, Length)</l>
<c></c>
<c>* 遍历每一张图像</c>
<l>for I := 0 to Length - 1 by 1</l>
<c></c>
<c>    * 获取当前图像路径</c>
<l>    tuple_select(Files, I, ImagePath)   </l>
<c></c>
<c>    * 读取图像</c>
<l>    read_image(Image, ImagePath)</l>
<c>    * 获取图像尺寸</c>
<l>    get_image_size(Image, Width, Height)</l>
<c></c>
<c></c>
<c>* 转换为灰度图像</c>
<l>rgb1_to_gray(Image, GrayImage)</l>
<c></c>
<c>* 分解RGB通道</c>
<l>decompose3(Image, R, G, B)</l>
<c></c>
<c>* 高斯滤波去噪</c>
<l>gauss_image(R, SmoothedImage, 5)</l>
<c></c>
<c>* 选择深度值区域</c>
<l>threshold(SmoothedImage, RegionThreshold1, 90, 180)</l>
<c></c>
<c>* 连通区域分析</c>
<l>connection(RegionThreshold1, ConnectedRegions)</l>
<c></c>
<c>* 闭运算连接相邻镀银碎片</c>
<l>closing_rectangle1(ConnectedRegions, ClosedRegions, 10, 10)</l>
<c></c>
<c>* 再次连通</c>
<l>connection(ClosedRegions, ConnectedRegions2)</l>
<c></c>
<c>* 筛选面积较大的区域（去除小碎点）</c>
<l>select_shape(ConnectedRegions2, LargeRegions, 'area', 'and', 100000, 9999999999)</l>
<c></c>
<c>* 宽度筛选（去除细长条区域）</c>
<l>select_shape(LargeRegions, SilverCandidate, 'width', 'and', 15, 99999)</l>
<c></c>
<c>* 再做一次开运算去除毛刺</c>
<l>opening_rectangle1(SilverCandidate, SilverCleaned, 5, 5)</l>
<c></c>
<c>* ------------------- 填充选中的镀银区域 -------------------</c>
<l>fill_up(SilverCleaned, SilverFilled)</l>
<c></c>
<c>* ------------------- 自动找外接矩形 + 动态裁剪左右边带 -------------------</c>
<c></c>
<c>  * 获取区域的主方向角 Phi（用于旋转对齐）</c>
<l>    orientation_region(SilverFilled, Phi)</l>
<c></c>
<c>    * 获取最小外接旋转矩形的中心位置、角度和尺寸</c>
<l>    smallest_rectangle2(SilverFilled, Row, Column, Phi, Length1, Length2)</l>
<c></c>
<c>    * 创建仿射变换矩阵，将区域旋转为水平（角度设置为 0）</c>
<l>    vector_angle_to_rigid(Row, Column, Phi, Row, Column, 0, HomMat2D)</l>
<c></c>
<c>    * 对图像应用仿射变换（进行旋转对齐）</c>
<l>    affine_trans_image(Image, RotatedImage, HomMat2D, 'constant', 'false')</l>
<c></c>
<c>    * 对填充区域也应用相同的仿射变换</c>
<l>    affine_trans_region(SilverFilled, RotatedRegion, HomMat2D, 'nearest_neighbor')</l>
<l>    smallest_rectangle2(SilverFilled, Row, Col, Phi, Length1, Length2)</l>
<c></c>
<c></c>
<c>* 生成左裁剪带</c>
<l>WidthBand := 10  </l>
<c>* 裁剪带宽度（可根据需要调整）</c>
<l>gen_rectangle2(LeftBand, Row, Col - Length1 + WidthBand / 2, 0, WidthBand / 2, Length2 + 20)</l>
<c></c>
<c>* 生成右裁剪带</c>
<l>gen_rectangle2(RightBand, Row, Col + Length1 - WidthBand / 2, 0, WidthBand / 2, Length2 + 20)</l>
<c></c>
<c>* 合并左右裁剪带</c>
<l>union2(LeftBand, RightBand, EdgeMasks)</l>
<c></c>
<c>* 剪掉边带，断开与边界的连通</c>
<l>difference(SilverFilled, EdgeMasks, SilverDisconnected)</l>
<c></c>
<c>* 重新连通区域</c>
<l>connection(SilverDisconnected, ConnectedRegionsFinal)</l>
<c></c>
<c>* 选面积较大的区域（去除小碎点）</c>
<l>select_shape(ConnectedRegionsFinal, LargeSilverRegions, 'area', 'and', 500, 999999)</l>
<c></c>
<c>* 获取区域个数</c>
<l>count_obj(LargeSilverRegions, RegionCount)</l>
<c></c>
<c>* 只保留面积最大的前2个区域</c>
<l>if (RegionCount &gt;= 2)</l>
<l>    select_obj(LargeSilverRegions, Region1, 1)</l>
<l>    select_obj(LargeSilverRegions, Region2, 2)</l>
<l>    union2(Region1, Region2, SilverFinal)</l>
<l>else</l>
<l>    select_obj(LargeSilverRegions, SilverFinal, 1)</l>
<l>endif</l>
<c></c>
<c>* 填充</c>
<l>fill_up(SilverFinal, SilverFinal)</l>
<c>* 计算填充区域的面积</c>
<l>area_center(SilverFinal, Area, RowCenter, ColCenter)</l>
<c>* 标准面积</c>
<l>Area_Std := 170000</l>
<c></c>
<c></c>
<c></c>
<c>* 计算面积差值</c>
<l>Diff := abs(Area - Area_Std)</l>
<c></c>
<c>* 判定缺陷</c>
<l>if (Diff &lt; 10000)</l>
<l>    IsOK := 0</l>
<l>else</l>
<l>    IsOK := 1</l>
<l>endif</l>
<l>   stop()</l>
<l>endfor</l>
<l>return ()</l>
</body>
<docu id="Defect">
<parameters>
<parameter id="Image"/>
<parameter id="IsOK"/>
</parameters>
</docu>
</procedure>
</hdevelop>
